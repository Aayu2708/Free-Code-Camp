def add_time(start, duration, starting_day=None):
    # Split the start time and AM/PM
    start_time, period = start.split()
    start_hour, start_minute = map(int, start_time.split(':'))
    
    # Convert start hour to 24-hour format
    if period == 'PM':
        start_hour += 12
    if start_hour == 12 and period == 'AM':
        start_hour = 0
    
    # Split the duration time
    duration_hour, duration_minute = map(int, duration.split(':'))
    
    # Add the duration to the start time
    end_minute = start_minute + duration_minute
    end_hour = start_hour + duration_hour + end_minute // 60
    end_minute %= 60
    end_day = end_hour // 24
    end_hour %= 24
    
    # Convert end hour to 12-hour format
    if end_hour == 0:
        end_period = 'AM'
        end_hour = 12
    elif 1 <= end_hour < 12:
        end_period = 'AM'
    elif end_hour == 12:
        end_period = 'PM'
    else:
        end_period = 'PM'
        end_hour -= 12
    
    # Day of the week calculation
    days_of_week = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    if starting_day:
        starting_day_index = days_of_week.index(starting_day.capitalize())
        end_day_index = (starting_day_index + end_day) % 7
        end_day_name = days_of_week[end_day_index]
    
    # Form the result time string
    result_time = f"{end_hour}:{end_minute:02d} {end_period}"
    if starting_day:
        result_time += f", {end_day_name}"
    if end_day == 1:
        result_time += " (next day)"
    elif end_day > 1:
        result_time += f" ({end_day} days later)"
    
    return result_time

# Example Usage
print(add_time('3:00 PM', '3:10'))
print(add_time('11:30 AM', '2:32', 'Monday'))
print(add_time('11:43 AM', '00:20'))
print(add_time('10:10 PM', '3:30'))
print(add_time('11:43 PM', '24:20', 'tueSday'))
print(add_time('6:30 PM', '205:12'))
