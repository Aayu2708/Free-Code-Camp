def arithmetic_arranger(problems, display_answers=False):
    # Error Handling
    if len(problems) > 5:
        return 'Error: Too many problems.'
    
    first_operands = []
    operators = []
    second_operands = []
    for problem in problems:
        parts = problem.split()
        if parts[1] not in ['+', '-']:
            return "Error: Operator must be '+' or '-'."
        if not parts[0].isdigit() or not parts[2].isdigit():
            return 'Error: Numbers must only contain digits.'
        if len(parts[0]) > 4 or len(parts[2]) > 4:
            return 'Error: Numbers cannot be more than four digits.'
        
        first_operands.append(parts[0])
        operators.append(parts[1])
        second_operands.append(parts[2])
    
    # Formatting
    top_line = ''
    bottom_line = ''
    dashes = ''
    results_line = ''
    
    for i in range(len(problems)):
        first_operand = first_operands[i]
        operator = operators[i]
        second_operand = second_operands[i]
        max_length = max(len(first_operand), len(second_operand)) + 2
        
        top_line += first_operand.rjust(max_length)
        bottom_line += operator + ' ' + second_operand.rjust(max_length - 2)
        dashes += '-' * max_length
        
        if display_answers:
            if operator == '+':
                result = str(int(first_operand) + int(second_operand))
            else:
                result = str(int(first_operand) - int(second_operand))
            results_line += result.rjust(max_length)
        
        if i < len(problems) - 1:
            top_line += ' ' * 4
            bottom_line += ' ' * 4
            dashes += ' ' * 4
            results_line += ' ' * 4
    
    arranged_problems = top_line + '\n' + bottom_line + '\n' + dashes
    if display_answers:
        arranged_problems += '\n' + results_line
    
    return arranged_problems

# Example Usage
problems = ["32 + 698", "3801 - 2", "45 + 43", "123 + 49", "1 + 2"]
print(arithmetic_arranger(problems, display_answers=True))
