class Category:
    def __init__(self, name):
        self.name = name
        self.ledger = []

    def deposit(self, amount, description=""):
        self.ledger.append({"amount": amount, "description": description})

    def withdraw(self, amount, description=""):
        if self.check_funds(amount):
            self.ledger.append({"amount": -amount, "description": description})
            return True
        return False

    def get_balance(self):
        return sum(item['amount'] for item in self.ledger)

    def transfer(self, amount, category):
        if self.check_funds(amount):
            self.withdraw(amount, f"Transfer to {category.name}")
            category.deposit(amount, f"Transfer from {self.name}")
            return True
        return False

    def check_funds(self, amount):
        return amount <= self.get_balance()

    def get_withdrawals(self):
        return sum(item['amount'] for item in self.ledger if item['amount'] < 0)

    def __str__(self):
        title = f"{self.name:*^30}\n"
        items = "".join(
            f"{item['description'][:23]:23}{item['amount']:>7.2f}\n" for item in self.ledger
        )
        total = f"Total: {self.get_balance():.2f}"
        return title + items + total

def create_spend_chart(categories):
    title = "Percentage spent by category\n"
    total_spent = sum(category.get_withdrawals() for category in categories)
    spend_percentages = [
        (category.name, int((category.get_withdrawals() / total_spent) * 100))
        for category in categories
    ]

    chart_lines = []
    for i in range(100, -1, -10):
        line = f"{i:>3}| "
        for name, percentage in spend_percentages:
            if percentage >= i:
                line += "o  "
            else:
                line += "   "
        chart_lines.append(line)

    chart = title + "\n".join(chart_lines) + "\n    " + "---" * len(categories) + "-\n"

    name_lines = []
    max_name_length = max(len(category.name) for category in categories)
    for i in range(max_name_length):
        line = "     "
        for name, _ in spend_percentages:
            if i < len(name):
                line += f"{name[i]}  "
            else:
                line += "   "
        name_lines.append(line)

    chart += "\n".join(name_lines)
    return chart

# Example usage:
food = Category("Food")
food.deposit(1000, "deposit")
food.withdraw(10.15, "groceries")
food.withdraw(15.89, "restaurant and more food for dessert")
clothing = Category("Clothing")
food.transfer(50, clothing)
auto = Category("Auto")
auto.deposit(1000, "initial deposit")
auto.withdraw(15, "gas")

print(food)
print(clothing)
print(auto)
print(create_spend_chart([food, clothing, auto]))
